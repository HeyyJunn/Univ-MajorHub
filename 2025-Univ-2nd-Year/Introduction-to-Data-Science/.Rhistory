welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare_gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
# welfare$gender <- ifelse(welfare$gender == 1, "male", "female")
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare$gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
#3
top10_male_job <- welfare %>%
filter(gender == "male" & !is.na(code_job)) %>%
group_by(code_job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
print(top10_male_job)
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare$gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
#3
top10_male_job <- welfare %>%
filter(gender == "male" & !is.na(code_job)) %>%
group_by(code_job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
print(top10_male_job)
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare$gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2. 나이 + 성별 기준 평균 소득 계산
age_gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
#3
popular_male_job = welfare %>%
filter(gender == "male" & !is.na(code_job)) %>%
group_by(code_job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
print(popular_male_job)
# QUIZ 0331
# 60241996 김민준 (데이터사이언스 전공)
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare$gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2 나이와 성별에 따른 임금차이를 분석하시오
age_gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income) )
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
#3 남성의 가장 많은 직업 10종을 알아내시오
popular_male_job = welfare %>%
filter(gender == "male" & !is.na(code_job)) %>%
group_by(code_job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
print(popular_male_job)
# QUIZ 0331
# 60241996 김민준 (데이터사이언스 전공)
library(dplyr)
library(ggplot2)
welfare = read.csv("welfare.csv")
head(welfare)
welfare$gender = ifelse(welfare$gender==1, "male", "female")
welfare$income = ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
welfare$age = 2025-welfare$birth
# 1 성별에 따른 임금 차이를 분석하시오
gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income=mean(income))
ggplot(data=gender_income, aes(x = gender, y = mean_income)) + geom_bar(stat="identity")
# 2 나이와 성별에 따른 임금차이를 분석하시오
age_gender_income = welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income) )
ggplot(data = age_gender_income, aes(x = age, y = mean_income, color = gender)) +
geom_line()
#3 남성의 가장 많은 직업 10종을 알아내시오
popular_male_job = welfare %>%
filter(gender == "male" & !is.na(code_job)) %>%
group_by(code_job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
print(popular_male_job)
table4a
gather(table4a, '1999', '2000', key = 'year', value = "cases");
library(tidyr)
gather(table4a, '1999', '2000', key = 'year', value = "cases");
spread(table2, type, count)
library(tidyr)
table4a
gather(table4a, '1999', '2000', key = 'year', value = "cases");
table2
spread(table2, type, count)
head(table4a)
gather(table4a, '1999', '2000', key = 'year', value = "cases");
spread(table2, type, count)
library(tidyr)
gather(table4a, '1999', '2000', key = 'year', value = "cases");
spread(table2, type, count)
library(tidyr)
table4a
gather(table4a, '1999', '2000', key = 'year', value = "cases");
spread(table2, type, count)
library(tidyr)
table4a
gather(table4a, '1999', '2000', key = 'year', value = "cases");
table2
spread(table2, type, count)
x = data.frame(x1=c("A", "B", "C", "D", "E")), x2 = c(1, NA, NA, 3, NA))
x = data.frame(x1=c("A", "B", "C", "D", "E")) x2 = c(1, NA, NA, 3, NA))
x = data.frame(x1=c("A", "B", "C", "D", "E"), x2 = c(1, NA, NA, 3, NA))
x
drop_na(x,x2)
x
fill(x, x2)
x
replace_na(x, list(x2 =2))
df %>% complete(year=full_seq(year,1), qtr)
df = tibble(
year = c(2010, 2010, 2010,2010,2012,2012,2012),
dtr = c(1,2,3,4,1,2,3)
revenue = c(10,20,30,40,NA,60,70)
df = tibble(
year = c(2010, 2010, 2010,2010,2012,2012,2012),
dtr = c(1,2,3,4,1,2,3)
revenue = c(10,20,30,40,NA,60,70)
df = tibble(
year = c(2010, 2010, 2010,2010,2012,2012,2012),
dtr = c(1,2,3,4,1,2,3),
revenue = c(10,20,30,40,NA,60,70)
)
df
df %>% complete(year=full_seq(year,1), qtr)
df = tibble(
year = c(2010, 2010, 2010,2010,2012,2012,2012),
qtr = c(1,2,3,4,1,2,3),
revenue = c(10,20,30,40,NA,60,70)
)
df
df %>% complete(year=full_seq(year,1), qtr)
separate(table3, rate, sep="/", into = c("cases", "pop"))
table3
separate(table3, rate, sep="/", into = c("cases", "pop"))
separate_rows(table3, rate, sep="/")
unite(table5, century, year, col = "year", sep="")
unite(table5, year, century, col = "year", sep="")
library(mpg)
library(ggplot2)
mpg
head(mpg)
hwy_mpg = mpg %>%
filter(displ <= 4 & displ >= 5)
hwy_mpg = mpg %>%
filter(mpg$displ <= 4 & displ >= 5)
hwy_mpg = mpg %>%
filter(mpg$displ <= 4 & mpg$displ >= 5)
hwy_mpg = mpg %>%
filter(mpg$displ <= 4 & mpg$displ >= 5)
displ_under4 = filter(mpg$displ <= 4)
mpg$displ_under4 = filter(mpg$displ <= 4)
mpg_a = mmpg %>% filter(displ <= 4)
mpg_a = mpg %>% filter(displ <= 4)
mpg_a = mpg %>% filter(mpg$displ <= 4)
mpg_b = mpg %>% filter(mpg$displ >= 5)
mean(mpg_a$hwy)
mpg$mpg_a = mpg %>% filter(displ <= 4)
library(dplyr)
library(ggplot2)
head(mpg)
mpg_a = mpg %>% filter(displ <= 4)
mpg_b = mpg %>% filter(displ >= 5)
mean(mpg_a$hwy)
mean(mpg_b$hwy)
#highway + city / 2
mpg_a = mpg %>% filter(manufacturer=c('chevrolet', 'doge', 'ford', 'lincoln'))
#highway + city / 2
mpg_a = mpg %>% filter(manufacturer==c('chevrolet', 'doge', 'ford', 'lincoln'))
#highway + city / 2
mpg_a = mpg %>% filter(manufacturer=='chevrolet', 'doge', 'ford', 'lincoln'))
mpg_b = mpg %>% filter(manufacturer = )
#highway + city / 2
mpg_a = mpg %>% filter(manufacturer %in% 'chevrolet', 'doge', 'ford', 'lincoln'))
#highway + city / 2
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mean(mpg_a$hwy)
mean(mpg_b$hwy)
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mean(mpg_a$hwy)
mean(mpg_b$hwy)
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg$hwycty = (hwy + cty) / 2
#highway + city / 2
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
hwycty = (hwy + cty) / 2
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mean(mpg_a$hwycty)
mean(mpg_b$hwycty)
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mpg
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mpg
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mpg
mean(mpg_a$hwycty)
mean(mpg_b$hwycty)
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mpg
mean(mpg_a$hwycty)
mean(mpg_b$hwycty)
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mpg
mean(mpg_a$hwycty)
mean(mpg_b$hwycty)
mpg_a = mpg %>% filter(manufacturer %in% c('chevrolet', 'doge', 'ford', 'lincoln'))
mpg_a
mpg_b = mpg %>% filter(manufacturer %in% c('honda', 'nissan', 'subaru', 'toyota'))
mpg_b
mpg$hwycty = (mpg$hwy + mpg$cty) / 2
mpg
mean(mpg_a$hwycty)
mean(mpg_b$hwycty)
mpg$ctyhwy = (mpg$cty + mpg$hwy) / 2
mpg %>% arrange(desc(ctyhwy)) %>%
head(10)
mpg$ctyhwy = (mpg$cty + mpg$hwy) / 2
mpg %>% arrange(desc(ctyhwy)) %>%
groupby(manufacturer, model, ctyhwy)
mpg$ctyhwy = (mpg$cty + mpg$hwy) / 2
mpg %>% arrange(desc(ctyhwy)) %>%
groupby(manufacturer, model, ctyhwy) %>%
head(1)
mpg$ctyhwy = (mpg$cty + mpg$hwy) / 2
mpg %>%
arrange(desc(ctyhwy)) %>%
groupby(manufacturer, model, ctyhwy) %>%
head(1)
mpg$ctyhwy = (mpg$cty + mpg$hwy) / 2
mpg %>%
arrange(desc(ctyhwy)) %>%
group_by(manufacturer, model, ctyhwy) %>%
head(1)
mpg %>%
arrnage(desc(cty_hwy))
mpg %>%
arrange(desc(cty_hwy))
mpg %>%
arrange(desc(cty_hwy)) %>%
head(1) %>%
select(manufacturer,model,cty_hwy)
mpg %>%
arrange(desc(cty_hwy)) %>%
head(1) %>%
select(manufacturer,model,cty_hwy)
mpg %>%
arrange(desc(cty_hwy)) %>%
head(1) %>%
select(manufacturer,model,cty_hwy)
mpg %>%
arrange(desc(cty_hwy)) %>%
head(1) %>%
select(manufacturer,model,cty_hwy)
install.packages("devtools")
devtools::install_github("gadenbuie/rsthemes")
rsthemes::install_rsthemes()
rsthemes::list_rsthemes()
rsthemes::use_theme("One Dark {rsthemes}")
rsthemes::use_theme("One Dark {rsthemes}")
rsthemes::try_rsthemes()
n
n
n
rsthemes::try_rsthemes()
