v3
v4 = rnorm(20)
v4
v4
mean(v1)
mean(v2)
mean(v3)
order(v1)
rev(v1)
v1
v1=rev(v1)
v1
sd(v2)
sort(v4)
sort(v4, decreasing=TURE)
sort(v4, decreasing = TRUE)
length(v4)
getwd()
setwd("/Users/viola_patrinii/Desktop/Univ-MajorHub/2025-Univ-2nd-Year/Introduction-to-Data-Science/")
x = c(1,4,6,8,9)
x
x[2]
x[-2]
x[3]
x
x[3] = 4
x
x[2<x & x<5]
x = runif(5)
x
(0.4 <= x) & (x <= 0.7)
any(x>0.8)
all(x<0.7)
is.vector(x)
row1 = c(1,2,3)
row2= c(4,5,6)
row3 = c(7,8,9)
mat1 = rbind(row1,row2,row3)
mat1
mat2 = cbind(row1, row2, row3)
mat2
mat3
mat3;
mat3 = mat1 + mat2
mat3
mat2
mat3 = mat1 + mat2
mat3
mat2 = matrix(10:18, nrow=3)
mat3 = mat1 + mat2
mat3
mat3 = mat1 + mat2
mat3
print(mat3)
mat3
mat3 = mat1 + mat2
mat3
fruit
fruit;
fruit
fruit
print(fruit)
score
score
score
score
print(score)
score
name=c("철수", "영희", "순이", "영철")
english=c(90, 80, 60, 70)
math=c(50, 60, 100, 20)
score=data.frame(Name=name, English=english, Math=math)
score
no=c(1,2,3,4);
name=c("Apple", "Banana", "Peach", "Berry");
prices = c(500, 200, 200, 50);
qty=c(5,2,7,9);
fruit = data.frame(No=no, Name=name, Prices=prices, QTY=qty);
print(fruit)
score$AVG=(score$English+scores$Math)/2
name=c("철수", "영희", "순이", "영철")
english=c(90, 80, 60, 70)
math=c(50, 60, 100, 20)
score=data.frame(Name=name, English=english, Math=math)
score
score$AVG=(score$English+score$Math)/2
score
dim(iris)
nrow(iris)
dim(iris)
nrow(iris)
ncol(iris)
colnames(iris)
class(iris)
str(iris)
unique(iris[,5])
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMenas(iris[,-5])
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMenas(iris[,-5])
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMenas(iris[,-5])
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
is.data.frame(iris)
is.matrix(iris)
state.x77
str(state.x77)
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
is.data.frame(iris)
is.matrix(iris)
state.x77
str(state.x77)
class(state.x77)
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
is.data.frame(iris)
is.matrix(iris)
state.x77
str(state.x77)
class(state.x77) #matrix array 매트릭스의 구성요소가 array 로 되어있다.
new_state = data.frame(state.x77)
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
is.data.frame(iris)
is.matrix(iris)
state.x77
str(state.x77)
class(state.x77) #matrix array 매트릭스의 구성요소가 array 로 되어있다.
new_state = data.frame(state.x77)
new_state
dim(iris) #데이터 dimension 정보
nrow(iris) #row  수
ncol(iris) #col 수
colnames(iris) #[1] "data.frame
class(iris) #데이터셋 자료 구조 확인
str(iris) # 데이터셋 요약 정보 보기
unique(iris[,5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
is.data.frame(iris)
is.matrix(iris)
state.x77
str(state.x77)
class(state.x77) #matrix array 매트릭스의 구성요소가 array 로 되어있다.
new_state = data.frame(state.x77)
new_state
class(new_state)
str(new_state)
f
f= c('A', 'B', 'B', 'O', 'AB', 'A')
f_factor = factor(f)
f
f_factor
f= c('A', 'B', 'B', 'O', 'AB', 'A')
f_factor = factor(f)
# 이미 지정된 값의 종류 이외의 값이 들어오는 것을 막을 수 있음
f_factor[7] = 'B'
f_factor[8] = 'C'
as.integer(f_factor)
f= c('A', 'B', 'B', 'O', 'AB', 'A')
f_factor = factor(f)
# 이미 지정된 값의 종류 이외의 값이 들어오는 것을 막을 수 있음
f_factor[7] = 'B'
f_factor[8] = 'C'
as.integer(f_factor)
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Brand=brand, Menu=menu, Kcal=kcal, Na=na, Fat=fat)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1
burger['M', Kcal]
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1
burger['M', Kcal]
burger
burger['M', Kcal]
burger['M', kcal]
burger['M', na]
burger['M', Na]
burger[1, na]
burger[1, na]
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('Brand', 'M', 'L', 'B')
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('Brand', 'M', 'L', 'B')
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1
burger['M', na]
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1
burger['M', 3]
# Q2
# Q3
# Q4
burger[, Kcal]
burger[, kcal]
# Q2
burger[, 2]
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1
burger['M', 3]
# Q2
burger[, 2]
# Q3
burger['M', 1]
burger['B', 1]
# Q4
# QUIZ 0317
# 60241996 김민준
#brand=c('M', 'L', 'B')
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 3]
# Q2 모든 브랜드의 열량정보는?
burger[, 2]
# Q3 M과 B사의 메뉴명은?
burger['M', 1]
burger['B', 1]
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 2]
# Q3 M과 B사의 메뉴명은?
burger['M', 1]
burger['B', 1]
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 2]
# Q3 M과 B사의 메뉴명은?
burger['M', 1]
burger['B', 1]
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 2]
# Q3 M과 B사의 메뉴명은?
burger['M', 1]
burger['B', 1]
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 'Kcal']
# Q3 M과 B사의 메뉴명은?
burger['M', 'Menu']
burger['B', 'Menu']
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 'Kcal']
# Q3 M과 B사의 메뉴명은?
burger['M', 'Menu']
burger['B', 'Menu']
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 'Kcal']
# Q3 M과 B사의 메뉴명은?
burger['M', 'Menu']
burger['B', 'Menu']
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 'Kcal']
# Q3 M과 B사의 메뉴명은?
burger['M', 'Menu']
burger['B', 'Menu']
# QUIZ 0317
# 60241996 김민준 (데이터사이언스 전공)
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
##########
# Q1 M사의 나트륨 함량은?
burger['M', 'Na']
# Q2 모든 브랜드의 열량정보는?
burger[, 'Kcal']
# Q3 M과 B사의 메뉴명은?
burger[c('M','B'), 'Menu']
menu=c('빅맥', '불고기버거', '치즈와퍼')
kcal=c(514, 533, 566)
na=c(917, 817, 920)
fat=c(15, 13, 12)
burger=data.frame(Menu=menu, Kcal=kcal, Na=na, Fat=fat)
rownames(burger)=c('M', 'L', 'B')
burger
getwd()
score.read.csv("score.csv")
score.read.csv("score.csv")
score.read.csv("score.csv")
score.read.csv("score.csv")
score.read.csv("score.csv")
score.read.csv("score.csv")
score.read.csv("score.csv")
